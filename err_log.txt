running install
running bdist_egg
running egg_info
writing pointnet2.egg-info/PKG-INFO
writing dependency_links to pointnet2.egg-info/dependency_links.txt
writing top-level names to pointnet2.egg-info/top_level.txt
reading manifest file 'pointnet2.egg-info/SOURCES.txt'
writing manifest file 'pointnet2.egg-info/SOURCES.txt'
installing library code to build/bdist.linux-x86_64/egg
running install_lib
running build_ext
building 'pointnet2_cuda' extension
x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include -I/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include -I/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/TH -I/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/THC -I/usr/include/python3.6m -I/media/schen/cdisk/venv/py3env/include/python3.6m -c src/pointnet2_api.cpp -o build/temp.linux-x86_64-3.6/src/pointnet2_api.o -g -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE="_gcc" -DPYBIND11_STDLIB="_libstdcpp" -DPYBIND11_BUILD_ABI="_cxxabi1011" -DTORCH_EXTENSION_NAME=pointnet2_cuda -D_GLIBCXX_USE_CXX11_ABI=0 -std=c++14
In file included from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/Parallel.h:140:0,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/utils.h:3,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/nn/cloneable.h:5,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/nn.h:3,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/all.h:13,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/extension.h:4,
                 from src/pointnet2_api.cpp:2:
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/ParallelOpenMP.h:83:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for if ((end - begin) >= grain_size)
 
x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include -I/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include -I/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/TH -I/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/THC -I/usr/include/python3.6m -I/media/schen/cdisk/venv/py3env/include/python3.6m -c src/ball_query.cpp -o build/temp.linux-x86_64-3.6/src/ball_query.o -g -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE="_gcc" -DPYBIND11_STDLIB="_libstdcpp" -DPYBIND11_BUILD_ABI="_cxxabi1011" -DTORCH_EXTENSION_NAME=pointnet2_cuda -D_GLIBCXX_USE_CXX11_ABI=0 -std=c++14
In file included from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/Parallel.h:140:0,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/TH/THTensorApply.h:4,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/TH/THTensor.h:5,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/THC/THCTensor.h:4,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/THC/THC.h:12,
                 from src/ball_query.cpp:3:
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/ParallelOpenMP.h:83:0: warning: ignoring #pragma omp parallel [-Wunknown-pragmas]
 #pragma omp parallel for if ((end - begin) >= grain_size)
 
In file included from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/c10/util/Optional.h:28:0,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/serialize/input-archive.h:3,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/serialize/archive.h:3,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/serialize/tensor.h:3,
                 from src/ball_query.cpp:1:
src/ball_query.cpp: In function ‘int ball_query_wrapper_fast(int, int, int, float, int, at::Tensor, at::Tensor, at::Tensor)’:
src/ball_query.cpp:10:42: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]
 #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x, " must be a CUDAtensor ")
                                          ^
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/c10/macros/Macros.h:173:65: note: in definition of macro ‘C10_UNLIKELY’
 #define C10_UNLIKELY(expr)  (__builtin_expect(static_cast<bool>(expr), 0))
                                                                 ^~~~
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/c10/util/Exception.h:362:7: note: in expansion of macro ‘C10_UNLIKELY_OR_CONST’
   if (C10_UNLIKELY_OR_CONST(!(cond))) {                                 \
       ^~~~~~~~~~~~~~~~~~~~~
src/ball_query.cpp:10:23: note: in expansion of macro ‘TORCH_CHECK’
 #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x, " must be a CUDAtensor ")
                       ^~~~~~~~~~~
src/ball_query.cpp:12:24: note: in expansion of macro ‘CHECK_CUDA’
 #define CHECK_INPUT(x) CHECK_CUDA(x);CHECK_CONTIGUOUS(x)
                        ^~~~~~~~~~
src/ball_query.cpp:16:5: note: in expansion of macro ‘CHECK_INPUT’
     CHECK_INPUT(new_xyz_tensor);
     ^
In file included from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/Tensor.h:3:0,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/Context.h:4,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/ATen.h:9,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/types.h:3,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/serialize/input-archive.h:6,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/serialize/archive.h:3,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/serialize/tensor.h:3,
                 from src/ball_query.cpp:1:
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/core/TensorBody.h:303:30: note: declared here
   DeprecatedTypeProperties & type() const {
                              ^~~~
In file included from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/c10/util/Optional.h:28:0,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/serialize/input-archive.h:3,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/serialize/archive.h:3,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/serialize/tensor.h:3,
                 from src/ball_query.cpp:1:
src/ball_query.cpp:10:42: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]
 #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x, " must be a CUDAtensor ")
                                          ^
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/c10/macros/Macros.h:173:65: note: in definition of macro ‘C10_UNLIKELY’
 #define C10_UNLIKELY(expr)  (__builtin_expect(static_cast<bool>(expr), 0))
                                                                 ^~~~
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/c10/util/Exception.h:362:7: note: in expansion of macro ‘C10_UNLIKELY_OR_CONST’
   if (C10_UNLIKELY_OR_CONST(!(cond))) {                                 \
       ^~~~~~~~~~~~~~~~~~~~~
src/ball_query.cpp:10:23: note: in expansion of macro ‘TORCH_CHECK’
 #define CHECK_CUDA(x) TORCH_CHECK(x.type().is_cuda(), #x, " must be a CUDAtensor ")
                       ^~~~~~~~~~~
src/ball_query.cpp:12:24: note: in expansion of macro ‘CHECK_CUDA’
 #define CHECK_INPUT(x) CHECK_CUDA(x);CHECK_CONTIGUOUS(x)
                        ^~~~~~~~~~
src/ball_query.cpp:17:5: note: in expansion of macro ‘CHECK_INPUT’
     CHECK_INPUT(xyz_tensor);
     ^
In file included from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/Tensor.h:3:0,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/Context.h:4,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/ATen.h:9,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/types.h:3,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/serialize/input-archive.h:6,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/serialize/archive.h:3,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/serialize/tensor.h:3,
                 from src/ball_query.cpp:1:
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/core/TensorBody.h:303:30: note: declared here
   DeprecatedTypeProperties & type() const {
                              ^~~~
src/ball_query.cpp:18:55: warning: ‘T* at::Tensor::data() const [with T = float]’ is deprecated: Tensor.data<T>() is deprecated. Please use Tensor.data_ptr<T>() instead. [-Wdeprecated-declarations]
     const float *new_xyz = new_xyz_tensor.data<float>();
                                                       ^
In file included from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/Tensor.h:3:0,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/Context.h:4,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/ATen.h:9,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/types.h:3,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/serialize/input-archive.h:6,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/serialize/archive.h:3,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/serialize/tensor.h:3,
                 from src/ball_query.cpp:1:
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/core/TensorBody.h:395:7: note: declared here
   T * data() const {
       ^~~~
src/ball_query.cpp:19:47: warning: ‘T* at::Tensor::data() const [with T = float]’ is deprecated: Tensor.data<T>() is deprecated. Please use Tensor.data_ptr<T>() instead. [-Wdeprecated-declarations]
     const float *xyz = xyz_tensor.data<float>();
                                               ^
In file included from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/Tensor.h:3:0,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/Context.h:4,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/ATen.h:9,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/types.h:3,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/serialize/input-archive.h:6,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/serialize/archive.h:3,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/serialize/tensor.h:3,
                 from src/ball_query.cpp:1:
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/core/TensorBody.h:395:7: note: declared here
   T * data() const {
       ^~~~
src/ball_query.cpp:20:37: warning: ‘T* at::Tensor::data() const [with T = int]’ is deprecated: Tensor.data<T>() is deprecated. Please use Tensor.data_ptr<T>() instead. [-Wdeprecated-declarations]
     int *idx = idx_tensor.data<int>();
                                     ^
In file included from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/Tensor.h:3:0,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/Context.h:4,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/ATen.h:9,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/types.h:3,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/serialize/input-archive.h:6,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/serialize/archive.h:3,
                 from /media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include/torch/serialize/tensor.h:3,
                 from src/ball_query.cpp:1:
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/core/TensorBody.h:395:7: note: declared here
   T * data() const {
       ^~~~
/usr/bin/nvcc -I/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include -I/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/api/include -I/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/TH -I/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/THC -I/usr/include/python3.6m -I/media/schen/cdisk/venv/py3env/include/python3.6m -c src/ball_query_gpu.cu -o build/temp.linux-x86_64-3.6/src/ball_query_gpu.o -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr --compiler-options '-fPIC' -O2 -DTORCH_API_INCLUDE_EXTENSION_H -DPYBIND11_COMPILER_TYPE="_gcc" -DPYBIND11_STDLIB="_libstdcpp" -DPYBIND11_BUILD_ABI="_cxxabi1011" -DTORCH_EXTENSION_NAME=pointnet2_cuda -D_GLIBCXX_USE_CXX11_ABI=0 -gencode=arch=compute_61,code=compute_61 -gencode=arch=compute_61,code=sm_61 -std=c++14
/usr/include/c++/6/tuple: In instantiation of ‘static constexpr bool std::_TC<<anonymous>, _Elements>::_MoveConstructibleTuple() [with _UElements = {std::tuple<at::Tensor, at::Tensor, at::Tensor>}; bool <anonymous> = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]’:
/usr/include/c++/6/tuple:626:248:   required by substitution of ‘template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), at::Tensor, at::Tensor, at::Tensor>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {std::tuple<at::Tensor, at::Tensor, at::Tensor>}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), at::Tensor, at::Tensor, at::Tensor>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]’
/usr/include/c++/6/tuple:1396:58:   required from ‘constexpr std::tuple<typename std::__decay_and_strip<_Elements>::__type ...> std::make_tuple(_Elements&& ...) [with _Elements = {const at::Tensor&, const at::Tensor&, const at::Tensor&}]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/ExpandUtils.h:97:58:   required from here
/usr/include/c++/6/tuple:483:67: error: mismatched argument pack lengths while expanding ‘std::is_constructible<_Elements, _UElements&&>’
       return __and_<is_constructible<_Elements, _UElements&&>...>::value;
                                                                   ^~~~~
/usr/include/c++/6/tuple: In instantiation of ‘static constexpr bool std::_TC<<anonymous>, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {std::tuple<at::Tensor, at::Tensor, at::Tensor>}; bool <anonymous> = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]’:
/usr/include/c++/6/tuple:626:362:   required by substitution of ‘template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), at::Tensor, at::Tensor, at::Tensor>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {std::tuple<at::Tensor, at::Tensor, at::Tensor>}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), at::Tensor, at::Tensor, at::Tensor>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]’
/usr/include/c++/6/tuple:1396:58:   required from ‘constexpr std::tuple<typename std::__decay_and_strip<_Elements>::__type ...> std::make_tuple(_Elements&& ...) [with _Elements = {const at::Tensor&, const at::Tensor&, const at::Tensor&}]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/ExpandUtils.h:97:58:   required from here
/usr/include/c++/6/tuple:489:65: error: mismatched argument pack lengths while expanding ‘std::is_convertible<_UElements&&, _Elements>’
       return __and_<is_convertible<_UElements&&, _Elements>...>::value;
                                                                 ^~~~~
/usr/include/c++/6/tuple: In instantiation of ‘static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = const std::tuple<at::Tensor, at::Tensor, at::Tensor>&; bool <anonymous> = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]’:
/usr/include/c++/6/tuple:662:419:   required by substitution of ‘template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), at::Tensor, at::Tensor, at::Tensor>::_NonNestedTuple<const tuple<_Elements ...>&>()), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(const std::tuple<_Args1 ...>&) [with _UElements = {at::Tensor, at::Tensor, at::Tensor}; _Dummy = void; typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), at::Tensor, at::Tensor, at::Tensor>::_NonNestedTuple<const tuple<_Elements ...>&>()), bool>::type <anonymous> = <missing>]’
/usr/include/c++/6/tuple:1396:58:   required from ‘constexpr std::tuple<typename std::__decay_and_strip<_Elements>::__type ...> std::make_tuple(_Elements&& ...) [with _Elements = {const at::Tensor&, const at::Tensor&, const at::Tensor&}]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/ExpandUtils.h:97:58:   required from here
/usr/include/c++/6/tuple:495:244: error: wrong number of template arguments (4, should be 2)
       return  __and_<__not_<is_same<tuple<_Elements...>,
                                                                                                                                                                                                                                                    ^    
/usr/include/c++/6/type_traits:1558:8: note: provided for ‘template<class _From, class _To> struct std::is_convertible’
     struct is_convertible
        ^~~~~~~~~~~~~~
/usr/include/c++/6/tuple: In instantiation of ‘static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = std::tuple<at::Tensor, at::Tensor, at::Tensor>&&; bool <anonymous> = true; _Elements = {at::Tensor, at::Tensor, at::Tensor}]’:
/usr/include/c++/6/tuple:686:422:   required by substitution of ‘template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_MoveConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), at::Tensor, at::Tensor, at::Tensor>::_NonNestedTuple<tuple<_Elements ...>&&>()), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(std::tuple<_Args1 ...>&&) [with _UElements = {at::Tensor, at::Tensor, at::Tensor}; _Dummy = void; typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_MoveConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), at::Tensor, at::Tensor, at::Tensor>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), at::Tensor, at::Tensor, at::Tensor>::_NonNestedTuple<tuple<_Elements ...>&&>()), bool>::type <anonymous> = <missing>]’
/usr/include/c++/6/tuple:1396:58:   required from ‘constexpr std::tuple<typename std::__decay_and_strip<_Elements>::__type ...> std::make_tuple(_Elements&& ...) [with _Elements = {const at::Tensor&, const at::Tensor&, const at::Tensor&}]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/ExpandUtils.h:97:58:   required from here
/usr/include/c++/6/tuple:495:244: error: wrong number of template arguments (4, should be 2)
       return  __and_<__not_<is_same<tuple<_Elements...>,
                                                                                                                                                                                                                                                    ^    
/usr/include/c++/6/type_traits:1558:8: note: provided for ‘template<class _From, class _To> struct std::is_convertible’
     struct is_convertible
        ^~~~~~~~~~~~~~
/usr/include/c++/6/tuple: In instantiation of ‘static constexpr bool std::_TC<<anonymous>, _Elements>::_MoveConstructibleTuple() [with _UElements = {const c10::nullopt_t&}; bool <anonymous> = true; _Elements = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int}]’:
/usr/include/c++/6/tuple:626:248:   required by substitution of ‘template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {const c10::nullopt_t&}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]’
/usr/include/c++/6/type_traits:970:16:   required by substitution of ‘template<class _Tp, class _Arg, class> static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>; _Arg = const c10::nullopt_t&; <template-parameter-1-3> = <missing>]’
/usr/include/c++/6/type_traits:981:40:   required from ‘struct std::__is_direct_constructible_impl<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, const c10::nullopt_t&>’
/usr/include/c++/6/type_traits:143:8:   required from ‘struct std::__and_<std::is_destructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >, std::__is_direct_constructible_impl<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, const c10::nullopt_t&> >’
/usr/include/c++/6/type_traits:985:8:   required from ‘struct std::__is_direct_constructible_new_safe<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, const c10::nullopt_t&>’
/usr/include/c++/6/type_traits:1067:8:   required from ‘struct std::__is_direct_constructible_new<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, const c10::nullopt_t&>’
/usr/include/c++/6/type_traits:1075:8:   required from ‘struct std::__is_direct_constructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, const c10::nullopt_t&>’
/usr/include/c++/6/type_traits:1115:8:   required from ‘struct std::__is_constructible_impl<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, const c10::nullopt_t&>’
/usr/include/c++/6/type_traits:1126:8:   required from ‘struct std::is_constructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, const c10::nullopt_t&>’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/c10/util/Optional.h:522:77:   required by substitution of ‘template<class U, typename std::enable_if<(((std::is_constructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, U&&>::value && (! std::is_same<typename std::decay<_Tp>::type, c10::in_place_t>::value)) && (! std::is_same<typename std::decay<_Tp>::type, c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> > >::value)) && std::is_convertible<U&&, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >::value), bool>::type <anonymous> > constexpr c10::optional<T>::optional(U&&) [with U = const c10::nullopt_t&; typename std::enable_if<(((std::is_constructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, U&&>::value && (! std::is_same<typename std::decay<_Tp>::type, c10::in_place_t>::value)) && (! std::is_same<typename std::decay<_Tp>::type, c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> > >::value)) && std::is_convertible<U&&, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >::value), bool>::type <anonymous> = <missing>]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/jit/frontend/source_range.h:147:13:   required from here
/usr/include/c++/6/tuple:483:67: error: mismatched argument pack lengths while expanding ‘std::is_constructible<_Elements, _UElements&&>’
       return __and_<is_constructible<_Elements, _UElements&&>...>::value;
                                                                   ^~~~~
/usr/include/c++/6/tuple: In instantiation of ‘static constexpr bool std::_TC<<anonymous>, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {const c10::nullopt_t&}; bool <anonymous> = true; _Elements = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int}]’:
/usr/include/c++/6/tuple:626:362:   required by substitution of ‘template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {const c10::nullopt_t&}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]’
/usr/include/c++/6/type_traits:970:16:   required by substitution of ‘template<class _Tp, class _Arg, class> static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>; _Arg = const c10::nullopt_t&; <template-parameter-1-3> = <missing>]’
/usr/include/c++/6/type_traits:981:40:   required from ‘struct std::__is_direct_constructible_impl<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, const c10::nullopt_t&>’
/usr/include/c++/6/type_traits:143:8:   required from ‘struct std::__and_<std::is_destructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >, std::__is_direct_constructible_impl<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, const c10::nullopt_t&> >’
/usr/include/c++/6/type_traits:985:8:   required from ‘struct std::__is_direct_constructible_new_safe<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, const c10::nullopt_t&>’
/usr/include/c++/6/type_traits:1067:8:   required from ‘struct std::__is_direct_constructible_new<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, const c10::nullopt_t&>’
/usr/include/c++/6/type_traits:1075:8:   required from ‘struct std::__is_direct_constructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, const c10::nullopt_t&>’
/usr/include/c++/6/type_traits:1115:8:   required from ‘struct std::__is_constructible_impl<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, const c10::nullopt_t&>’
/usr/include/c++/6/type_traits:1126:8:   required from ‘struct std::is_constructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, const c10::nullopt_t&>’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/c10/util/Optional.h:522:77:   required by substitution of ‘template<class U, typename std::enable_if<(((std::is_constructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, U&&>::value && (! std::is_same<typename std::decay<_Tp>::type, c10::in_place_t>::value)) && (! std::is_same<typename std::decay<_Tp>::type, c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> > >::value)) && std::is_convertible<U&&, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >::value), bool>::type <anonymous> > constexpr c10::optional<T>::optional(U&&) [with U = const c10::nullopt_t&; typename std::enable_if<(((std::is_constructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, U&&>::value && (! std::is_same<typename std::decay<_Tp>::type, c10::in_place_t>::value)) && (! std::is_same<typename std::decay<_Tp>::type, c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> > >::value)) && std::is_convertible<U&&, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >::value), bool>::type <anonymous> = <missing>]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/jit/frontend/source_range.h:147:13:   required from here
/usr/include/c++/6/tuple:489:65: error: mismatched argument pack lengths while expanding ‘std::is_convertible<_UElements&&, _Elements>’
       return __and_<is_convertible<_UElements&&, _Elements>...>::value;
                                                                 ^~~~~
/usr/include/c++/6/tuple: In instantiation of ‘static constexpr bool std::_TC<<anonymous>, _Elements>::_MoveConstructibleTuple() [with _UElements = {const std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&}; bool <anonymous> = true; _Elements = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int}]’:
/usr/include/c++/6/tuple:626:248:   required by substitution of ‘template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {const std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/c10/util/Optional.h:188:73:   required from ‘constexpr c10::optional_base<T>::optional_base() [with T = std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/c10/util/Optional.h:497:67:   required from ‘constexpr c10::optional<T>::optional(c10::nullopt_t) [with T = std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/jit/frontend/source_range.h:147:13:   required from here
/usr/include/c++/6/tuple:483:67: error: mismatched argument pack lengths while expanding ‘std::is_constructible<_Elements, _UElements&&>’
       return __and_<is_constructible<_Elements, _UElements&&>...>::value;
                                                                   ^~~~~
/usr/include/c++/6/tuple: In instantiation of ‘static constexpr bool std::_TC<<anonymous>, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {const std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&}; bool <anonymous> = true; _Elements = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int}]’:
/usr/include/c++/6/tuple:626:362:   required by substitution of ‘template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {const std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/c10/util/Optional.h:188:73:   required from ‘constexpr c10::optional_base<T>::optional_base() [with T = std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/c10/util/Optional.h:497:67:   required from ‘constexpr c10::optional<T>::optional(c10::nullopt_t) [with T = std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/jit/frontend/source_range.h:147:13:   required from here
/usr/include/c++/6/tuple:489:65: error: mismatched argument pack lengths while expanding ‘std::is_convertible<_UElements&&, _Elements>’
       return __and_<is_convertible<_UElements&&, _Elements>...>::value;
                                                                 ^~~~~
/usr/include/c++/6/tuple: In instantiation of ‘static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = const std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&; bool <anonymous> = true; _Elements = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int}]’:
/usr/include/c++/6/tuple:662:419:   required by substitution of ‘template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_ConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_NonNestedTuple<const tuple<_Elements ...>&>()), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(const std::tuple<_Args1 ...>&) [with _UElements = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int}; _Dummy = void; typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_ConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_NonNestedTuple<const tuple<_Elements ...>&>()), bool>::type <anonymous> = <missing>]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/c10/util/Optional.h:188:73:   required from ‘constexpr c10::optional_base<T>::optional_base() [with T = std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/c10/util/Optional.h:497:67:   required from ‘constexpr c10::optional<T>::optional(c10::nullopt_t) [with T = std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/jit/frontend/source_range.h:147:13:   required from here
/usr/include/c++/6/tuple:495:244: error: wrong number of template arguments (4, should be 2)
       return  __and_<__not_<is_same<tuple<_Elements...>,
                                                                                                                                                                                                                                                    ^    
/usr/include/c++/6/type_traits:1558:8: note: provided for ‘template<class _From, class _To> struct std::is_convertible’
     struct is_convertible
        ^~~~~~~~~~~~~~
/usr/include/c++/6/tuple: In instantiation of ‘static constexpr bool std::_TC<<anonymous>, _Elements>::_MoveConstructibleTuple() [with _UElements = {c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >}; bool <anonymous> = true; _Elements = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int}]’:
/usr/include/c++/6/tuple:626:248:   required by substitution of ‘template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]’
/usr/include/c++/6/type_traits:970:16:   required by substitution of ‘template<class _Tp, class _Arg, class> static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>; _Arg = c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >&&; <template-parameter-1-3> = <missing>]’
/usr/include/c++/6/type_traits:981:40:   required from ‘struct std::__is_direct_constructible_impl<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >&&>’
/usr/include/c++/6/type_traits:143:8:   required from ‘struct std::__and_<std::is_destructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >, std::__is_direct_constructible_impl<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >&&> >’
/usr/include/c++/6/type_traits:985:8:   required from ‘struct std::__is_direct_constructible_new_safe<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >&&>’
/usr/include/c++/6/type_traits:1067:8:   required from ‘struct std::__is_direct_constructible_new<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >&&>’
/usr/include/c++/6/type_traits:1075:8:   required from ‘struct std::__is_direct_constructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >&&>’
/usr/include/c++/6/type_traits:1115:8:   required from ‘struct std::__is_constructible_impl<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >&&>’
/usr/include/c++/6/type_traits:1126:8:   required from ‘struct std::is_constructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >&&>’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/c10/util/Optional.h:522:77:   required by substitution of ‘template<class U, typename std::enable_if<(((std::is_constructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, U&&>::value && (! std::is_same<typename std::decay<_Tp>::type, c10::in_place_t>::value)) && (! std::is_same<typename std::decay<_Tp>::type, c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> > >::value)) && std::is_convertible<U&&, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >::value), bool>::type <anonymous> > constexpr c10::optional<T>::optional(U&&) [with U = c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >; typename std::enable_if<(((std::is_constructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, U&&>::value && (! std::is_same<typename std::decay<_Tp>::type, c10::in_place_t>::value)) && (! std::is_same<typename std::decay<_Tp>::type, c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> > >::value)) && std::is_convertible<U&&, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >::value), bool>::type <anonymous> = <missing>]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/jit/frontend/source_range.h:147:13:   required from here
/usr/include/c++/6/tuple:483:67: error: mismatched argument pack lengths while expanding ‘std::is_constructible<_Elements, _UElements&&>’
       return __and_<is_constructible<_Elements, _UElements&&>...>::value;
                                                                   ^~~~~
/usr/include/c++/6/tuple: In instantiation of ‘static constexpr bool std::_TC<<anonymous>, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >}; bool <anonymous> = true; _Elements = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int}]’:
/usr/include/c++/6/tuple:626:362:   required by substitution of ‘template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]’
/usr/include/c++/6/type_traits:970:16:   required by substitution of ‘template<class _Tp, class _Arg, class> static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>; _Arg = c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >&&; <template-parameter-1-3> = <missing>]’
/usr/include/c++/6/type_traits:981:40:   required from ‘struct std::__is_direct_constructible_impl<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >&&>’
/usr/include/c++/6/type_traits:143:8:   required from ‘struct std::__and_<std::is_destructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >, std::__is_direct_constructible_impl<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >&&> >’
/usr/include/c++/6/type_traits:985:8:   required from ‘struct std::__is_direct_constructible_new_safe<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >&&>’
/usr/include/c++/6/type_traits:1067:8:   required from ‘struct std::__is_direct_constructible_new<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >&&>’
/usr/include/c++/6/type_traits:1075:8:   required from ‘struct std::__is_direct_constructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >&&>’
/usr/include/c++/6/type_traits:1115:8:   required from ‘struct std::__is_constructible_impl<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >&&>’
/usr/include/c++/6/type_traits:1126:8:   required from ‘struct std::is_constructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >&&>’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/c10/util/Optional.h:522:77:   required by substitution of ‘template<class U, typename std::enable_if<(((std::is_constructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, U&&>::value && (! std::is_same<typename std::decay<_Tp>::type, c10::in_place_t>::value)) && (! std::is_same<typename std::decay<_Tp>::type, c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> > >::value)) && std::is_convertible<U&&, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >::value), bool>::type <anonymous> > constexpr c10::optional<T>::optional(U&&) [with U = c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >; typename std::enable_if<(((std::is_constructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, U&&>::value && (! std::is_same<typename std::decay<_Tp>::type, c10::in_place_t>::value)) && (! std::is_same<typename std::decay<_Tp>::type, c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> > >::value)) && std::is_convertible<U&&, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >::value), bool>::type <anonymous> = <missing>]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/jit/frontend/source_range.h:147:13:   required from here
/usr/include/c++/6/tuple:489:65: error: mismatched argument pack lengths while expanding ‘std::is_convertible<_UElements&&, _Elements>’
       return __and_<is_convertible<_UElements&&, _Elements>...>::value;
                                                                 ^~~~~
/usr/include/c++/6/tuple: In instantiation of ‘static constexpr bool std::_TC<<anonymous>, _Elements>::_MoveConstructibleTuple() [with _UElements = {std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>}; bool <anonymous> = true; _Elements = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int}]’:
/usr/include/c++/6/tuple:626:248:   required by substitution of ‘template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]’
/usr/include/c++/6/type_traits:970:16:   required by substitution of ‘template<class _Tp, class _Arg, class> static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>; _Arg = std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&&; <template-parameter-1-3> = <missing>]’
/usr/include/c++/6/type_traits:981:40:   required from ‘struct std::__is_direct_constructible_impl<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&&>’
/usr/include/c++/6/type_traits:143:8:   required from ‘struct std::__and_<std::is_destructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >, std::__is_direct_constructible_impl<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&&> >’
/usr/include/c++/6/type_traits:985:8:   required from ‘struct std::__is_direct_constructible_new_safe<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&&>’
/usr/include/c++/6/type_traits:1067:8:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/c++/6/type_traits:143:8:   required from ‘struct std::__and_<std::is_constructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&&>, std::__is_nt_constructible_impl<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&&> >’
/usr/include/c++/6/type_traits:1211:8:   required from ‘struct std::is_nothrow_constructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&&>’
/usr/include/c++/6/type_traits:1242:8:   required from ‘struct std::__is_nothrow_move_constructible_impl<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, true>’
/usr/include/c++/6/type_traits:1248:8:   required from ‘struct std::is_nothrow_move_constructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/c10/util/Optional.h:198:20:   required from ‘constexpr c10::optional_base<T>::optional_base(c10::optional_base<T>&&) [with T = std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/jit/frontend/source_range.h:147:13:   required from here
/usr/include/c++/6/tuple:483:67: error: mismatched argument pack lengths while expanding ‘std::is_constructible<_Elements, _UElements&&>’
       return __and_<is_constructible<_Elements, _UElements&&>...>::value;
                                                                   ^~~~~
/usr/include/c++/6/tuple: In instantiation of ‘static constexpr bool std::_TC<<anonymous>, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>}; bool <anonymous> = true; _Elements = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int}]’:
/usr/include/c++/6/tuple:626:362:   required by substitution of ‘template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (3ul >= 1)), bool>::type <anonymous> = <missing>]’
/usr/include/c++/6/type_traits:970:16:   required by substitution of ‘template<class _Tp, class _Arg, class> static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>; _Arg = std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&&; <template-parameter-1-3> = <missing>]’
/usr/include/c++/6/type_traits:981:40:   required from ‘struct std::__is_direct_constructible_impl<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&&>’
/usr/include/c++/6/type_traits:143:8:   required from ‘struct std::__and_<std::is_destructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >, std::__is_direct_constructible_impl<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&&> >’
/usr/include/c++/6/type_traits:985:8:   required from ‘struct std::__is_direct_constructible_new_safe<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&&>’
/usr/include/c++/6/type_traits:1067:8:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/c++/6/type_traits:143:8:   required from ‘struct std::__and_<std::is_constructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&&>, std::__is_nt_constructible_impl<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&&> >’
/usr/include/c++/6/type_traits:1211:8:   required from ‘struct std::is_nothrow_constructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&&>’
/usr/include/c++/6/type_traits:1242:8:   required from ‘struct std::__is_nothrow_move_constructible_impl<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, true>’
/usr/include/c++/6/type_traits:1248:8:   required from ‘struct std::is_nothrow_move_constructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/c10/util/Optional.h:198:20:   required from ‘constexpr c10::optional_base<T>::optional_base(c10::optional_base<T>&&) [with T = std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/jit/frontend/source_range.h:147:13:   required from here
/usr/include/c++/6/tuple:489:65: error: mismatched argument pack lengths while expanding ‘std::is_convertible<_UElements&&, _Elements>’
       return __and_<is_convertible<_UElements&&, _Elements>...>::value;
                                                                 ^~~~~
/usr/include/c++/6/tuple: In instantiation of ‘static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&&; bool <anonymous> = true; _Elements = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int}]’:
/usr/include/c++/6/tuple:686:422:   required by substitution of ‘template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_MoveConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_NonNestedTuple<tuple<_Elements ...>&&>()), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(std::tuple<_Args1 ...>&&) [with _UElements = {std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int}; _Dummy = void; typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_MoveConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>::_NonNestedTuple<tuple<_Elements ...>&&>()), bool>::type <anonymous> = <missing>]’
/usr/include/c++/6/type_traits:970:16:   required by substitution of ‘template<class _Tp, class _Arg, class> static std::true_type std::__do_is_direct_constructible_impl::__test(int) [with _Tp = std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>; _Arg = std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&&; <template-parameter-1-3> = <missing>]’
/usr/include/c++/6/type_traits:981:40:   required from ‘struct std::__is_direct_constructible_impl<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&&>’
/usr/include/c++/6/type_traits:143:8:   required from ‘struct std::__and_<std::is_destructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >, std::__is_direct_constructible_impl<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&&> >’
/usr/include/c++/6/type_traits:985:8:   required from ‘struct std::__is_direct_constructible_new_safe<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&&>’
/usr/include/c++/6/type_traits:1067:8:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/c++/6/type_traits:143:8:   required from ‘struct std::__and_<std::is_constructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&&>, std::__is_nt_constructible_impl<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&&> >’
/usr/include/c++/6/type_traits:1211:8:   required from ‘struct std::is_nothrow_constructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>&&>’
/usr/include/c++/6/type_traits:1242:8:   required from ‘struct std::__is_nothrow_move_constructible_impl<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>, true>’
/usr/include/c++/6/type_traits:1248:8:   required from ‘struct std::is_nothrow_move_constructible<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> >’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/c10/util/Optional.h:198:20:   required from ‘constexpr c10::optional_base<T>::optional_base(c10::optional_base<T>&&) [with T = std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/jit/frontend/source_range.h:147:13:   required from here
/usr/include/c++/6/tuple:495:244: error: wrong number of template arguments (4, should be 2)
       return  __and_<__not_<is_same<tuple<_Elements...>,
                                                                                                                                                                                                                                                    ^    
/usr/include/c++/6/type_traits:1558:8: note: provided for ‘template<class _From, class _To> struct std::is_convertible’
     struct is_convertible
        ^~~~~~~~~~~~~~
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/c10/util/Optional.h: In member function ‘c10::optional<std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int> > torch::jit::SourceRange::file_line_col() const’:
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/c10/util/Optional.h:497:11: note:   after user-defined conversion: constexpr c10::optional<T>::optional(c10::nullopt_t) [with T = std::tuple<std::basic_string<char, std::char_traits<char>, std::allocator<char> >, long unsigned int, long unsigned int>]
   constexpr optional(nullopt_t) noexcept : OptionalBase<T>(){};
           ^~~~~~~~
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/core/boxing/impl/boxing.h: At global scope:
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/core/boxing/impl/boxing.h:242:122: error: expansion pattern ‘c10::impl::can_box<FirstArg>’ contains no argument packs
 struct BoxedKernelWrapper<
                                                                                                                          ^  
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/ATen/core/boxing/impl/boxing.h:242:149: error: template argument 1 is invalid
 struct BoxedKernelWrapper<
                                                                                                                                                     ^
/usr/include/c++/6/tuple: In instantiation of ‘static constexpr bool std::_TC<<anonymous>, _Elements>::_MoveConstructibleTuple() [with _UElements = {std::tuple<const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>}; bool <anonymous> = true; _Elements = {const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&}]’:
/usr/include/c++/6/tuple:626:248:   required by substitution of ‘template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (4ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {std::tuple<const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (4ul >= 1)), bool>::type <anonymous> = <missing>]’
/usr/include/c++/6/tuple:1545:43:   required from ‘constexpr std::tuple<_Elements& ...> std::tie(_Elements& ...) [with _Elements = {const c10::optional<signed char>, const c10::VaryingShape<long int>, const c10::VaryingShape<long int>, const c10::optional<bool>}]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/c10/util/hash.h:139:58:   required from ‘size_t c10::get_hash(const Types& ...) [with Types = {c10::optional<signed char>, c10::VaryingShape<long int>, c10::VaryingShape<long int>, c10::optional<bool>}; size_t = long unsigned int]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/jit/runtime/argument_spec.h:458:238:   required from here
/usr/include/c++/6/tuple:483:67: error: mismatched argument pack lengths while expanding ‘std::is_constructible<_Elements, _UElements&&>’
       return __and_<is_constructible<_Elements, _UElements&&>...>::value;
                                                                   ^~~~~
/usr/include/c++/6/tuple: In instantiation of ‘static constexpr bool std::_TC<<anonymous>, _Elements>::_ImplicitlyMoveConvertibleTuple() [with _UElements = {std::tuple<const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>}; bool <anonymous> = true; _Elements = {const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&}]’:
/usr/include/c++/6/tuple:626:362:   required by substitution of ‘template<class ... _UElements, typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (4ul >= 1)), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(_UElements&& ...) [with _UElements = {std::tuple<const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>}; typename std::enable_if<(((std::_TC<(sizeof... (_UElements) == 1), const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>::_NotSameTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>::_MoveConstructibleTuple<_UElements ...>()) && std::_TC<(1ul == sizeof... (_UElements)), const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (4ul >= 1)), bool>::type <anonymous> = <missing>]’
/usr/include/c++/6/tuple:1545:43:   required from ‘constexpr std::tuple<_Elements& ...> std::tie(_Elements& ...) [with _Elements = {const c10::optional<signed char>, const c10::VaryingShape<long int>, const c10::VaryingShape<long int>, const c10::optional<bool>}]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/c10/util/hash.h:139:58:   required from ‘size_t c10::get_hash(const Types& ...) [with Types = {c10::optional<signed char>, c10::VaryingShape<long int>, c10::VaryingShape<long int>, c10::optional<bool>}; size_t = long unsigned int]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/jit/runtime/argument_spec.h:458:238:   required from here
/usr/include/c++/6/tuple:489:65: error: mismatched argument pack lengths while expanding ‘std::is_convertible<_UElements&&, _Elements>’
       return __and_<is_convertible<_UElements&&, _Elements>...>::value;
                                                                 ^~~~~
/usr/include/c++/6/tuple: In instantiation of ‘static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = const std::tuple<const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>&; bool <anonymous> = true; _Elements = {const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&}]’:
/usr/include/c++/6/tuple:662:419:   required by substitution of ‘template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>::_ConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>::_NonNestedTuple<const tuple<_Elements ...>&>()), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(const std::tuple<_Args1 ...>&) [with _UElements = {const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&}; _Dummy = void; typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>::_ConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>::_NonNestedTuple<const tuple<_Elements ...>&>()), bool>::type <anonymous> = <missing>]’
/usr/include/c++/6/tuple:1545:43:   required from ‘constexpr std::tuple<_Elements& ...> std::tie(_Elements& ...) [with _Elements = {const c10::optional<signed char>, const c10::VaryingShape<long int>, const c10::VaryingShape<long int>, const c10::optional<bool>}]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/c10/util/hash.h:139:58:   required from ‘size_t c10::get_hash(const Types& ...) [with Types = {c10::optional<signed char>, c10::VaryingShape<long int>, c10::VaryingShape<long int>, c10::optional<bool>}; size_t = long unsigned int]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/jit/runtime/argument_spec.h:458:238:   required from here
/usr/include/c++/6/tuple:495:244: error: wrong number of template arguments (5, should be 2)
       return  __and_<__not_<is_same<tuple<_Elements...>,
                                                                                                                                                                                                                                                    ^    
/usr/include/c++/6/type_traits:1558:8: note: provided for ‘template<class _From, class _To> struct std::is_convertible’
     struct is_convertible
        ^~~~~~~~~~~~~~
/usr/include/c++/6/tuple: In instantiation of ‘static constexpr bool std::_TC<<anonymous>, _Elements>::_NonNestedTuple() [with _SrcTuple = std::tuple<const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>&&; bool <anonymous> = true; _Elements = {const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&}]’:
/usr/include/c++/6/tuple:686:422:   required by substitution of ‘template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>::_MoveConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>::_NonNestedTuple<tuple<_Elements ...>&&>()), bool>::type <anonymous> > constexpr std::tuple< <template-parameter-1-1> >::tuple(std::tuple<_Args1 ...>&&) [with _UElements = {const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&}; _Dummy = void; typename std::enable_if<((std::_TC<(1ul == sizeof... (_UElements)), const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>::_MoveConstructibleTuple<_UElements ...>() && std::_TC<(1ul == sizeof... (_UElements)), const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (1ul == 1)), const c10::optional<signed char>&, const c10::VaryingShape<long int>&, const c10::VaryingShape<long int>&, const c10::optional<bool>&>::_NonNestedTuple<tuple<_Elements ...>&&>()), bool>::type <anonymous> = <missing>]’
/usr/include/c++/6/tuple:1545:43:   required from ‘constexpr std::tuple<_Elements& ...> std::tie(_Elements& ...) [with _Elements = {const c10::optional<signed char>, const c10::VaryingShape<long int>, const c10::VaryingShape<long int>, const c10::optional<bool>}]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/c10/util/hash.h:139:58:   required from ‘size_t c10::get_hash(const Types& ...) [with Types = {c10::optional<signed char>, c10::VaryingShape<long int>, c10::VaryingShape<long int>, c10::optional<bool>}; size_t = long unsigned int]’
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/include/torch/csrc/jit/runtime/argument_spec.h:458:238:   required from here
/usr/include/c++/6/tuple:495:244: error: wrong number of template arguments (5, should be 2)
       return  __and_<__not_<is_same<tuple<_Elements...>,
                                                                                                                                                                                                                                                    ^    
/usr/include/c++/6/type_traits:1558:8: note: provided for ‘template<class _From, class _To> struct std::is_convertible’
     struct is_convertible
        ^~~~~~~~~~~~~~
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/utils/cpp_extension.py:369: UserWarning: Attempted to use ninja as the BuildExtension backend but we could not find ninja.. Falling back to using the slow distutils backend.
  warnings.warn(msg.format('we could not find ninja.'))
error: command '/usr/bin/nvcc' failed with exit status 1
running install
running bdist_egg
running egg_info
writing iou3d.egg-info/PKG-INFO
writing dependency_links to iou3d.egg-info/dependency_links.txt
writing top-level names to iou3d.egg-info/top_level.txt
reading manifest file 'iou3d.egg-info/SOURCES.txt'
writing manifest file 'iou3d.egg-info/SOURCES.txt'
installing library code to build/bdist.linux-x86_64/egg
running install_lib
running build_ext
creating build/bdist.linux-x86_64/egg
copying build/lib.linux-x86_64-3.6/iou3d_cuda.cpython-36m-x86_64-linux-gnu.so -> build/bdist.linux-x86_64/egg
creating stub loader for iou3d_cuda.cpython-36m-x86_64-linux-gnu.so
byte-compiling build/bdist.linux-x86_64/egg/iou3d_cuda.py to iou3d_cuda.cpython-36.pyc
creating build/bdist.linux-x86_64/egg/EGG-INFO
copying iou3d.egg-info/PKG-INFO -> build/bdist.linux-x86_64/egg/EGG-INFO
copying iou3d.egg-info/SOURCES.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
copying iou3d.egg-info/dependency_links.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
copying iou3d.egg-info/top_level.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
writing build/bdist.linux-x86_64/egg/EGG-INFO/native_libs.txt
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/utils/cpp_extension.py:369: UserWarning: Attempted to use ninja as the BuildExtension backend but we could not find ninja.. Falling back to using the slow distutils backend.
  warnings.warn(msg.format('we could not find ninja.'))
zip_safe flag not set; analyzing archive contents...
__pycache__.iou3d_cuda.cpython-36: module references __file__
creating 'dist/iou3d-0.0.0-py3.6-linux-x86_64.egg' and adding 'build/bdist.linux-x86_64/egg' to it
removing 'build/bdist.linux-x86_64/egg' (and everything under it)
Processing iou3d-0.0.0-py3.6-linux-x86_64.egg
removing '/media/schen/cdisk2/venv/py3env/lib/python3.6/site-packages/iou3d-0.0.0-py3.6-linux-x86_64.egg' (and everything under it)
creating /media/schen/cdisk2/venv/py3env/lib/python3.6/site-packages/iou3d-0.0.0-py3.6-linux-x86_64.egg
Extracting iou3d-0.0.0-py3.6-linux-x86_64.egg to /media/schen/cdisk2/venv/py3env/lib/python3.6/site-packages
iou3d 0.0.0 is already the active version in easy-install.pth

Installed /media/schen/cdisk2/venv/py3env/lib/python3.6/site-packages/iou3d-0.0.0-py3.6-linux-x86_64.egg
Processing dependencies for iou3d==0.0.0
Finished processing dependencies for iou3d==0.0.0
running install
running bdist_egg
running egg_info
writing roipool3d.egg-info/PKG-INFO
writing dependency_links to roipool3d.egg-info/dependency_links.txt
writing top-level names to roipool3d.egg-info/top_level.txt
reading manifest file 'roipool3d.egg-info/SOURCES.txt'
writing manifest file 'roipool3d.egg-info/SOURCES.txt'
installing library code to build/bdist.linux-x86_64/egg
running install_lib
running build_ext
creating build/bdist.linux-x86_64/egg
copying build/lib.linux-x86_64-3.6/roipool3d_cuda.cpython-36m-x86_64-linux-gnu.so -> build/bdist.linux-x86_64/egg
creating stub loader for roipool3d_cuda.cpython-36m-x86_64-linux-gnu.so
byte-compiling build/bdist.linux-x86_64/egg/roipool3d_cuda.py to roipool3d_cuda.cpython-36.pyc
creating build/bdist.linux-x86_64/egg/EGG-INFO
copying roipool3d.egg-info/PKG-INFO -> build/bdist.linux-x86_64/egg/EGG-INFO
copying roipool3d.egg-info/SOURCES.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
copying roipool3d.egg-info/dependency_links.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
copying roipool3d.egg-info/top_level.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
writing build/bdist.linux-x86_64/egg/EGG-INFO/native_libs.txt
/media/schen/cdisk/venv/py3env/lib/python3.6/site-packages/torch/utils/cpp_extension.py:369: UserWarning: Attempted to use ninja as the BuildExtension backend but we could not find ninja.. Falling back to using the slow distutils backend.
  warnings.warn(msg.format('we could not find ninja.'))
zip_safe flag not set; analyzing archive contents...
__pycache__.roipool3d_cuda.cpython-36: module references __file__
creating 'dist/roipool3d-0.0.0-py3.6-linux-x86_64.egg' and adding 'build/bdist.linux-x86_64/egg' to it
removing 'build/bdist.linux-x86_64/egg' (and everything under it)
Processing roipool3d-0.0.0-py3.6-linux-x86_64.egg
removing '/media/schen/cdisk2/venv/py3env/lib/python3.6/site-packages/roipool3d-0.0.0-py3.6-linux-x86_64.egg' (and everything under it)
creating /media/schen/cdisk2/venv/py3env/lib/python3.6/site-packages/roipool3d-0.0.0-py3.6-linux-x86_64.egg
Extracting roipool3d-0.0.0-py3.6-linux-x86_64.egg to /media/schen/cdisk2/venv/py3env/lib/python3.6/site-packages
roipool3d 0.0.0 is already the active version in easy-install.pth

Installed /media/schen/cdisk2/venv/py3env/lib/python3.6/site-packages/roipool3d-0.0.0-py3.6-linux-x86_64.egg
Processing dependencies for roipool3d==0.0.0
Finished processing dependencies for roipool3d==0.0.0
